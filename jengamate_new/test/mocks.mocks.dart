// Mocks generated by Mockito 5.4.5 from annotations
// in jengamate/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i36;
import 'dart:typed_data' as _i34;

import 'package:cloud_firestore/cloud_firestore.dart' as _i26;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:jengamate/models/audit_log_model.dart' as _i22;
import 'package:jengamate/models/category_model.dart' as _i16;
import 'package:jengamate/models/chat_message_model.dart' as _i31;
import 'package:jengamate/models/chat_room_model.dart' as _i23;
import 'package:jengamate/models/commission_model.dart' as _i15;
import 'package:jengamate/models/commission_tier_model.dart' as _i20;
import 'package:jengamate/models/content_report_model.dart' as _i21;
import 'package:jengamate/models/enhanced_user.dart' as _i12;
import 'package:jengamate/models/enums/order_enums.dart' as _i29;
import 'package:jengamate/models/enums/payment_enums.dart' as _i35;
import 'package:jengamate/models/enums/user_role.dart' as _i32;
import 'package:jengamate/models/faq_model.dart' as _i27;
import 'package:jengamate/models/financial_transaction_model.dart' as _i19;
import 'package:jengamate/models/inquiry.dart' as _i30;
import 'package:jengamate/models/notification_model.dart' as _i10;
import 'package:jengamate/models/order_model.dart' as _i7;
import 'package:jengamate/models/payment_model.dart' as _i8;
import 'package:jengamate/models/product_model.dart' as _i17;
import 'package:jengamate/models/quote_model.dart' as _i14;
import 'package:jengamate/models/rank_model.dart' as _i33;
import 'package:jengamate/models/rfq_model.dart' as _i13;
import 'package:jengamate/models/supplier_model.dart' as _i28;
import 'package:jengamate/models/support_ticket_model.dart' as _i24;
import 'package:jengamate/models/system_config_model.dart' as _i25;
import 'package:jengamate/models/user_model.dart' as _i11;
import 'package:jengamate/models/withdrawal_model.dart' as _i18;
import 'package:jengamate/services/auth_service.dart' as _i4;
import 'package:jengamate/services/database_service.dart' as _i9;
import 'package:jengamate/services/order_service.dart' as _i6;
import 'package:jengamate/services/payment_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i37;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredential_0 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentResult_1 extends _i1.SmartFake implements _i3.PaymentResult {
  _FakePaymentResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i4.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.User?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i5.Stream<_i2.User?>.empty(),
      ) as _i5.Stream<_i2.User?>);

  @override
  _i5.Future<_i2.UserCredential> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<_i2.UserCredential> registerWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #registerWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<void> sendOTP(
    String? phoneNumber,
    dynamic Function(String)? onCodeSent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOTP,
          [
            phoneNumber,
            onCodeSent,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.UserCredential?> verifyOTP(
    String? verificationId,
    String? smsCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [
            verificationId,
            smsCode,
          ],
        ),
        returnValue: _i5.Future<_i2.UserCredential?>.value(),
      ) as _i5.Future<_i2.UserCredential?>);

  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> resetPassword(String? email) => (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [email],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>?> getCustomClaims() => (super.noSuchMethod(
        Invocation.method(
          #getCustomClaims,
          [],
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<String?> getUserRole() => (super.noSuchMethod(
        Invocation.method(
          #getUserRole,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<bool> isAdmin() => (super.noSuchMethod(
        Invocation.method(
          #isAdmin,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> hasPermission(String? permission) => (super.noSuchMethod(
        Invocation.method(
          #hasPermission,
          [permission],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [OrderService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrderService extends _i1.Mock implements _i6.OrderService {
  MockOrderService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<List<_i7.OrderModel>> getBuyerOrders(String? buyerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBuyerOrders,
          [buyerId],
        ),
        returnValue: _i5.Stream<List<_i7.OrderModel>>.empty(),
      ) as _i5.Stream<List<_i7.OrderModel>>);

  @override
  _i5.Stream<List<_i7.OrderModel>> getSupplierOrders(String? supplierId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSupplierOrders,
          [supplierId],
        ),
        returnValue: _i5.Stream<List<_i7.OrderModel>>.empty(),
      ) as _i5.Stream<List<_i7.OrderModel>>);

  @override
  _i5.Stream<_i7.OrderModel> getOrder(String? orderId) => (super.noSuchMethod(
        Invocation.method(
          #getOrder,
          [orderId],
        ),
        returnValue: _i5.Stream<_i7.OrderModel>.empty(),
      ) as _i5.Stream<_i7.OrderModel>);

  @override
  _i5.Future<_i7.OrderModel?> getOrderById(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrderById,
          [orderId],
        ),
        returnValue: _i5.Future<_i7.OrderModel?>.value(),
      ) as _i5.Future<_i7.OrderModel?>);

  @override
  _i5.Stream<List<_i7.OrderModel>> getAllOrders() => (super.noSuchMethod(
        Invocation.method(
          #getAllOrders,
          [],
        ),
        returnValue: _i5.Stream<List<_i7.OrderModel>>.empty(),
      ) as _i5.Stream<List<_i7.OrderModel>>);

  @override
  _i5.Stream<List<_i7.OrderModel>> getOrdersByStatus(String? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrdersByStatus,
          [status],
        ),
        returnValue: _i5.Stream<List<_i7.OrderModel>>.empty(),
      ) as _i5.Stream<List<_i7.OrderModel>>);

  @override
  _i5.Future<void> createOrder(_i7.OrderModel? order) => (super.noSuchMethod(
        Invocation.method(
          #createOrder,
          [order],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createInvoiceForOrder(_i7.OrderModel? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #createInvoiceForOrder,
          [order],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateOrder(_i7.OrderModel? order) => (super.noSuchMethod(
        Invocation.method(
          #updateOrder,
          [order],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateOrderStatus(
    String? orderId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrderStatus,
          [
            orderId,
            status,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i8.PaymentModel>> streamOrderPayments(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamOrderPayments,
          [orderId],
        ),
        returnValue: _i5.Stream<List<_i8.PaymentModel>>.empty(),
      ) as _i5.Stream<List<_i8.PaymentModel>>);

  @override
  _i5.Future<double> getTotalPaidAmount(String? orderId) => (super.noSuchMethod(
        Invocation.method(
          #getTotalPaidAmount,
          [orderId],
        ),
        returnValue: _i5.Future<double>.value(0.0),
      ) as _i5.Future<double>);

  @override
  _i5.Future<_i7.OrderModel?> populateMissingOrderItems(
          _i7.OrderModel? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #populateMissingOrderItems,
          [order],
        ),
        returnValue: _i5.Future<_i7.OrderModel?>.value(),
      ) as _i5.Future<_i7.OrderModel?>);

  @override
  _i5.Future<_i7.OrderModel?> getOrderWithItems(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrderWithItems,
          [orderId],
        ),
        returnValue: _i5.Future<_i7.OrderModel?>.value(),
      ) as _i5.Future<_i7.OrderModel?>);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i9.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> createNotification(_i10.NotificationModel? notification) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNotification,
          [notification],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createPayment(_i8.PaymentModel? payment) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPayment,
          [payment],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i8.PaymentModel>> streamPayments(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamPayments,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i8.PaymentModel>>.empty(),
      ) as _i5.Stream<List<_i8.PaymentModel>>);

  @override
  _i5.Stream<List<_i7.OrderModel>> getOrders(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrders,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i7.OrderModel>>.empty(),
      ) as _i5.Stream<List<_i7.OrderModel>>);

  @override
  _i5.Future<void> addOrder(_i7.OrderModel? order) => (super.noSuchMethod(
        Invocation.method(
          #addOrder,
          [order],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<Map<String, dynamic>>> streamInquiryActivities(
          String? inquiryId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamInquiryActivities,
          [inquiryId],
        ),
        returnValue: _i5.Stream<List<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> addInquiryComment({
    required String? inquiryId,
    required String? userId,
    required String? userName,
    required String? text,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addInquiryComment,
          [],
          {
            #inquiryId: inquiryId,
            #userId: userId,
            #userName: userName,
            #text: text,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logInquiryStatusChange({
    required String? inquiryId,
    required String? fromStatus,
    required String? toStatus,
    required String? userId,
    required String? userName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInquiryStatusChange,
          [],
          {
            #inquiryId: inquiryId,
            #fromStatus: fromStatus,
            #toStatus: toStatus,
            #userId: userId,
            #userName: userName,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> sendInquiryNotification({
    required String? userId,
    required String? title,
    required String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendInquiryNotification,
          [],
          {
            #userId: userId,
            #title: title,
            #body: body,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<double> streamTotalSalesAmountTSHWindow({int? days = 7}) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamTotalSalesAmountTSHWindow,
          [],
          {#days: days},
        ),
        returnValue: _i5.Stream<double>.empty(),
      ) as _i5.Stream<double>);

  @override
  _i5.Stream<int> streamTotalOrdersCount() => (super.noSuchMethod(
        Invocation.method(
          #streamTotalOrdersCount,
          [],
        ),
        returnValue: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);

  @override
  _i5.Stream<int> streamPendingOrdersCount() => (super.noSuchMethod(
        Invocation.method(
          #streamPendingOrdersCount,
          [],
        ),
        returnValue: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);

  @override
  _i5.Stream<int> streamCompletedOrdersCount() => (super.noSuchMethod(
        Invocation.method(
          #streamCompletedOrdersCount,
          [],
        ),
        returnValue: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);

  @override
  _i5.Stream<double> streamTotalSalesAmountTSH() => (super.noSuchMethod(
        Invocation.method(
          #streamTotalSalesAmountTSH,
          [],
        ),
        returnValue: _i5.Stream<double>.empty(),
      ) as _i5.Stream<double>);

  @override
  _i5.Stream<int> streamTotalUsersCount() => (super.noSuchMethod(
        Invocation.method(
          #streamTotalUsersCount,
          [],
        ),
        returnValue: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);

  @override
  _i5.Stream<int> streamNewUsersCount({int? days = 7}) => (super.noSuchMethod(
        Invocation.method(
          #streamNewUsersCount,
          [],
          {#days: days},
        ),
        returnValue: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);

  @override
  _i5.Stream<List<double>> streamDailySalesTSH({int? days = 7}) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamDailySalesTSH,
          [],
          {#days: days},
        ),
        returnValue: _i5.Stream<List<double>>.empty(),
      ) as _i5.Stream<List<double>>);

  @override
  _i5.Stream<List<_i10.NotificationModel>> streamUserNotifications(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamUserNotifications,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i10.NotificationModel>>.empty(),
      ) as _i5.Stream<List<_i10.NotificationModel>>);

  @override
  _i5.Stream<int> streamUnreadNotificationsCount(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamUnreadNotificationsCount,
          [userId],
        ),
        returnValue: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);

  @override
  _i5.Future<_i11.UserModel?> getUser(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [uid],
        ),
        returnValue: _i5.Future<_i11.UserModel?>.value(),
      ) as _i5.Future<_i11.UserModel?>);

  @override
  _i5.Future<void> updateUser(_i11.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i12.EnhancedUser>> streamEnhancedUsers() =>
      (super.noSuchMethod(
        Invocation.method(
          #streamEnhancedUsers,
          [],
        ),
        returnValue: _i5.Stream<List<_i12.EnhancedUser>>.empty(),
      ) as _i5.Stream<List<_i12.EnhancedUser>>);

  @override
  _i5.Stream<List<_i11.UserModel>> streamAllUsers() => (super.noSuchMethod(
        Invocation.method(
          #streamAllUsers,
          [],
        ),
        returnValue: _i5.Stream<List<_i11.UserModel>>.empty(),
      ) as _i5.Stream<List<_i11.UserModel>>);

  @override
  _i5.Future<List<_i11.UserModel>> getAllUsers() => (super.noSuchMethod(
        Invocation.method(
          #getAllUsers,
          [],
        ),
        returnValue: _i5.Future<List<_i11.UserModel>>.value(<_i11.UserModel>[]),
      ) as _i5.Future<List<_i11.UserModel>>);

  @override
  _i5.Future<List<_i11.UserModel>> getUsersCreatedAfter(DateTime? startDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUsersCreatedAfter,
          [startDate],
        ),
        returnValue: _i5.Future<List<_i11.UserModel>>.value(<_i11.UserModel>[]),
      ) as _i5.Future<List<_i11.UserModel>>);

  @override
  _i5.Stream<List<_i13.RFQModel>> streamAllRFQs() => (super.noSuchMethod(
        Invocation.method(
          #streamAllRFQs,
          [],
        ),
        returnValue: _i5.Stream<List<_i13.RFQModel>>.empty(),
      ) as _i5.Stream<List<_i13.RFQModel>>);

  @override
  _i5.Stream<List<_i13.RFQModel>> streamUserRFQs(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamUserRFQs,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i13.RFQModel>>.empty(),
      ) as _i5.Stream<List<_i13.RFQModel>>);

  @override
  _i5.Stream<List<_i13.RFQModel>> streamInquiries(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamInquiries,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i13.RFQModel>>.empty(),
      ) as _i5.Stream<List<_i13.RFQModel>>);

  @override
  _i5.Future<_i13.RFQModel?> getRFQ(String? rfqId) => (super.noSuchMethod(
        Invocation.method(
          #getRFQ,
          [rfqId],
        ),
        returnValue: _i5.Future<_i13.RFQModel?>.value(),
      ) as _i5.Future<_i13.RFQModel?>);

  @override
  _i5.Future<void> updateRFQStatus(
    String? rfqId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRFQStatus,
          [
            rfqId,
            status,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createQuote(_i14.QuoteModel? quote) => (super.noSuchMethod(
        Invocation.method(
          #createQuote,
          [quote],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i14.QuoteModel>> streamQuotesForRFQ(String? rfqId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamQuotesForRFQ,
          [rfqId],
        ),
        returnValue: _i5.Stream<List<_i14.QuoteModel>>.empty(),
      ) as _i5.Stream<List<_i14.QuoteModel>>);

  @override
  _i5.Stream<List<_i15.CommissionModel>> getAllCommissions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCommissions,
          [],
        ),
        returnValue: _i5.Stream<List<_i15.CommissionModel>>.empty(),
      ) as _i5.Stream<List<_i15.CommissionModel>>);

  @override
  _i5.Stream<List<_i15.CommissionModel>> streamUserCommissions(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamUserCommissions,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i15.CommissionModel>>.empty(),
      ) as _i5.Stream<List<_i15.CommissionModel>>);

  @override
  _i5.Future<List<_i15.CommissionModel>> getCommissionRules() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommissionRules,
          [],
        ),
        returnValue: _i5.Future<List<_i15.CommissionModel>>.value(
            <_i15.CommissionModel>[]),
      ) as _i5.Future<List<_i15.CommissionModel>>);

  @override
  _i5.Stream<List<_i15.CommissionModel>> streamCommissionRules() =>
      (super.noSuchMethod(
        Invocation.method(
          #streamCommissionRules,
          [],
        ),
        returnValue: _i5.Stream<List<_i15.CommissionModel>>.empty(),
      ) as _i5.Stream<List<_i15.CommissionModel>>);

  @override
  _i5.Future<void> deleteCommissionRecord(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCommissionRecord,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i15.CommissionModel>> streamTrashedCommissions() =>
      (super.noSuchMethod(
        Invocation.method(
          #streamTrashedCommissions,
          [],
        ),
        returnValue: _i5.Stream<List<_i15.CommissionModel>>.empty(),
      ) as _i5.Stream<List<_i15.CommissionModel>>);

  @override
  _i5.Stream<List<_i16.CategoryModel>> streamCategories() =>
      (super.noSuchMethod(
        Invocation.method(
          #streamCategories,
          [],
        ),
        returnValue: _i5.Stream<List<_i16.CategoryModel>>.empty(),
      ) as _i5.Stream<List<_i16.CategoryModel>>);

  @override
  _i5.Future<List<_i16.CategoryModel>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue:
            _i5.Future<List<_i16.CategoryModel>>.value(<_i16.CategoryModel>[]),
      ) as _i5.Future<List<_i16.CategoryModel>>);

  @override
  _i5.Future<List<_i16.CategoryModel>> getSubCategories(String? parentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSubCategories,
          [parentId],
        ),
        returnValue:
            _i5.Future<List<_i16.CategoryModel>>.value(<_i16.CategoryModel>[]),
      ) as _i5.Future<List<_i16.CategoryModel>>);

  @override
  _i5.Future<void> addCategory(_i16.CategoryModel? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCategory,
          [category],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateCategory(_i16.CategoryModel? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategory,
          [category],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteCategory(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i17.ProductModel>> streamProducts() => (super.noSuchMethod(
        Invocation.method(
          #streamProducts,
          [],
        ),
        returnValue: _i5.Stream<List<_i17.ProductModel>>.empty(),
      ) as _i5.Stream<List<_i17.ProductModel>>);

  @override
  _i5.Future<List<_i17.ProductModel>> getTopSellingProducts(int? limit) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopSellingProducts,
          [limit],
        ),
        returnValue:
            _i5.Future<List<_i17.ProductModel>>.value(<_i17.ProductModel>[]),
      ) as _i5.Future<List<_i17.ProductModel>>);

  @override
  _i5.Future<void> deleteProducts(List<String>? productIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProducts,
          [productIds],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteProduct(String? productId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProduct,
          [productId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getProductImage(String? productId) => (super.noSuchMethod(
        Invocation.method(
          #getProductImage,
          [productId],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Stream<List<_i18.WithdrawalModel>> streamWithdrawals(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamWithdrawals,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i18.WithdrawalModel>>.empty(),
      ) as _i5.Stream<List<_i18.WithdrawalModel>>);

  @override
  _i5.Future<void> updateWithdrawalStatus(
    String? withdrawalId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWithdrawalStatus,
          [
            withdrawalId,
            status,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> getAdminAnalytics() => (super.noSuchMethod(
        Invocation.method(
          #getAdminAnalytics,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> getWithdrawalStats() => (super.noSuchMethod(
        Invocation.method(
          #getWithdrawalStats,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getSalesOverTime() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSalesOverTime,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<Map<String, int>> getOrderCountsByStatus() => (super.noSuchMethod(
        Invocation.method(
          #getOrderCountsByStatus,
          [],
        ),
        returnValue: _i5.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i5.Future<Map<String, int>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getUserGrowthOverTime() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserGrowthOverTime,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Stream<List<_i19.FinancialTransactionModel>> getFinancialTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFinancialTransactions,
          [],
        ),
        returnValue: _i5.Stream<List<_i19.FinancialTransactionModel>>.empty(),
      ) as _i5.Stream<List<_i19.FinancialTransactionModel>>);

  @override
  _i5.Future<List<_i20.CommissionTier>> getCommissionTiers() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommissionTiers,
          [],
        ),
        returnValue: _i5.Future<List<_i20.CommissionTier>>.value(
            <_i20.CommissionTier>[]),
      ) as _i5.Future<List<_i20.CommissionTier>>);

  @override
  _i5.Future<List<_i11.UserModel>> getUsersWithTierInfo() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUsersWithTierInfo,
          [],
        ),
        returnValue: _i5.Future<List<_i11.UserModel>>.value(<_i11.UserModel>[]),
      ) as _i5.Future<List<_i11.UserModel>>);

  @override
  _i5.Future<List<_i21.ContentReport>> getContentReports({String? status}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentReports,
          [],
          {#status: status},
        ),
        returnValue:
            _i5.Future<List<_i21.ContentReport>>.value(<_i21.ContentReport>[]),
      ) as _i5.Future<List<_i21.ContentReport>>);

  @override
  _i5.Future<void> createAuditLog(_i22.AuditLogModel? log) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAuditLog,
          [log],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i23.ChatRoom>> streamChatRoomsForUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamChatRoomsForUser,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i23.ChatRoom>>.empty(),
      ) as _i5.Stream<List<_i23.ChatRoom>>);

  @override
  _i5.Future<List<_i24.SupportTicket>> getAllSupportTickets() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSupportTickets,
          [],
        ),
        returnValue:
            _i5.Future<List<_i24.SupportTicket>>.value(<_i24.SupportTicket>[]),
      ) as _i5.Future<List<_i24.SupportTicket>>);

  @override
  _i5.Future<_i25.SystemConfig?> getSystemConfig() => (super.noSuchMethod(
        Invocation.method(
          #getSystemConfig,
          [],
        ),
        returnValue: _i5.Future<_i25.SystemConfig?>.value(),
      ) as _i5.Future<_i25.SystemConfig?>);

  @override
  _i5.Future<void> updateSystemConfig(_i25.SystemConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSystemConfig,
          [config],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i19.FinancialTransactionModel>>
      getPaginatedFinancialTransactions({
    int? limit = 20,
    _i26.DocumentSnapshot<Object?>? startAfter,
    String? userId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getPaginatedFinancialTransactions,
              [],
              {
                #limit: limit,
                #startAfter: startAfter,
                #userId: userId,
              },
            ),
            returnValue: _i5.Future<List<_i19.FinancialTransactionModel>>.value(
                <_i19.FinancialTransactionModel>[]),
          ) as _i5.Future<List<_i19.FinancialTransactionModel>>);

  @override
  _i5.Future<_i26.DocumentSnapshot<Object?>?> getLastTransactionDocument() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastTransactionDocument,
          [],
        ),
        returnValue: _i5.Future<_i26.DocumentSnapshot<Object?>?>.value(),
      ) as _i5.Future<_i26.DocumentSnapshot<Object?>?>);

  @override
  _i5.Future<List<_i24.SupportTicket>> getUserSupportTickets(
    String? userId, {
    int? limit = 50,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserSupportTickets,
          [userId],
          {#limit: limit},
        ),
        returnValue:
            _i5.Future<List<_i24.SupportTicket>>.value(<_i24.SupportTicket>[]),
      ) as _i5.Future<List<_i24.SupportTicket>>);

  @override
  _i5.Future<void> createSupportTicket(_i24.SupportTicket? ticket) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSupportTicket,
          [ticket],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i27.FAQItem>> getFAQs({String? category}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFAQs,
          [],
          {#category: category},
        ),
        returnValue: _i5.Future<List<_i27.FAQItem>>.value(<_i27.FAQItem>[]),
      ) as _i5.Future<List<_i27.FAQItem>>);

  @override
  _i5.Future<void> createFAQ(_i27.FAQItem? faq) => (super.noSuchMethod(
        Invocation.method(
          #createFAQ,
          [faq],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> requestWithdrawal(Map<String, dynamic>? withdrawal) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestWithdrawal,
          [withdrawal],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addOrUpdateProduct(Map<String, dynamic>? product) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdateProduct,
          [product],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addOrUpdateProductModel(_i17.ProductModel? product) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdateProductModel,
          [product],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> addOrderSupabase(_i7.OrderModel? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrderSupabase,
          [order],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<String?> createSupplier(_i28.SupplierModel? supplier) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSupplier,
          [supplier],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> updateProduct(
    String? productId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProduct,
          [
            productId,
            data,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i17.ProductModel?> getProduct(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [productId],
        ),
        returnValue: _i5.Future<_i17.ProductModel?>.value(),
      ) as _i5.Future<_i17.ProductModel?>);

  @override
  _i5.Future<List<_i17.ProductModel>> getProductsByIds(
          List<String>? productIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByIds,
          [productIds],
        ),
        returnValue:
            _i5.Future<List<_i17.ProductModel>>.value(<_i17.ProductModel>[]),
      ) as _i5.Future<List<_i17.ProductModel>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getApprovedSuppliers() =>
      (super.noSuchMethod(
        Invocation.method(
          #getApprovedSuppliers,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> createRFQ(Map<String, dynamic>? rfq) => (super.noSuchMethod(
        Invocation.method(
          #createRFQ,
          [rfq],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addRFQ(_i13.RFQModel? rfq) => (super.noSuchMethod(
        Invocation.method(
          #addRFQ,
          [rfq],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, dynamic>>> searchUsers(
    String? query, {
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [query],
          {#limit: limit},
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> updateCommissionRules(Map<String, dynamic>? rules) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCommissionRules,
          [rules],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<Map<String, dynamic>> streamOrderStats(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamOrderStats,
          [userId],
        ),
        returnValue: _i5.Stream<Map<String, dynamic>>.empty(),
      ) as _i5.Stream<Map<String, dynamic>>);

  @override
  _i5.Future<void> updateOrder(_i7.OrderModel? order) => (super.noSuchMethod(
        Invocation.method(
          #updateOrder,
          [order],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateOrderStatus(
    String? orderId,
    _i29.OrderStatus? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrderStatus,
          [
            orderId,
            status,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i30.Inquiry>> streamInquiriesForUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamInquiriesForUser,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i30.Inquiry>>.empty(),
      ) as _i5.Stream<List<_i30.Inquiry>>);

  @override
  _i5.Future<void> updateInquiryFields(
    String? inquiryId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateInquiryFields,
          [
            inquiryId,
            data,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateInquiryStatus(
    String? inquiryId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateInquiryStatus,
          [
            inquiryId,
            status,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateInquiryPriority(
    String? inquiryId,
    String? priority,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateInquiryPriority,
          [
            inquiryId,
            priority,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> assignInquiry({
    required String? inquiryId,
    required String? assignedTo,
    required String? assignedToName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #assignInquiry,
          [],
          {
            #inquiryId: inquiryId,
            #assignedTo: assignedTo,
            #assignedToName: assignedToName,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i31.ChatMessage>> streamMessages(String? chatRoomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamMessages,
          [chatRoomId],
        ),
        returnValue: _i5.Stream<List<_i31.ChatMessage>>.empty(),
      ) as _i5.Stream<List<_i31.ChatMessage>>);

  @override
  _i5.Future<void> addMessage(_i31.ChatMessage? message) => (super.noSuchMethod(
        Invocation.method(
          #addMessage,
          [message],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i23.ChatRoom?> getChatRoom(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #getChatRoom,
          [roomId],
        ),
        returnValue: _i5.Future<_i23.ChatRoom?>.value(),
      ) as _i5.Future<_i23.ChatRoom?>);

  @override
  _i5.Future<void> createChatRoom(_i23.ChatRoom? room) => (super.noSuchMethod(
        Invocation.method(
          #createChatRoom,
          [room],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createCommissionTier(_i20.CommissionTier? tier) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCommissionTier,
          [tier],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createContentReport(_i21.ContentReport? report) =>
      (super.noSuchMethod(
        Invocation.method(
          #createContentReport,
          [report],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateContentReportStatus(
    String? reportId,
    String? status, {
    String? reviewerId,
    String? reviewerName,
    String? reviewNotes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContentReportStatus,
          [
            reportId,
            status,
          ],
          {
            #reviewerId: reviewerId,
            #reviewerName: reviewerName,
            #reviewNotes: reviewNotes,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createUserProfile({
    required String? uid,
    required String? name,
    required String? phoneNumber,
    String? company,
    required _i32.UserRole? role,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserProfile,
          [],
          {
            #uid: uid,
            #name: name,
            #phoneNumber: phoneNumber,
            #company: company,
            #role: role,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i15.CommissionModel>> streamAllCommissions() =>
      (super.noSuchMethod(
        Invocation.method(
          #streamAllCommissions,
          [],
        ),
        returnValue: _i5.Stream<List<_i15.CommissionModel>>.empty(),
      ) as _i5.Stream<List<_i15.CommissionModel>>);

  @override
  _i5.Future<void> restoreCommission(String? commissionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreCommission,
          [commissionId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteCommissionPermanently(String? commissionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCommissionPermanently,
          [commissionId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addRank(_i33.RankModel? rank) => (super.noSuchMethod(
        Invocation.method(
          #addRank,
          [rank],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateRank(_i33.RankModel? rank) => (super.noSuchMethod(
        Invocation.method(
          #updateRank,
          [rank],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteRank(String? rankId) => (super.noSuchMethod(
        Invocation.method(
          #deleteRank,
          [rankId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i33.RankModel>> streamRanks() => (super.noSuchMethod(
        Invocation.method(
          #streamRanks,
          [],
        ),
        returnValue: _i5.Stream<List<_i33.RankModel>>.empty(),
      ) as _i5.Stream<List<_i33.RankModel>>);

  @override
  _i5.Future<void> addReview(Map<String, dynamic>? review) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReview,
          [review],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateModerationStatus(
    String? itemId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateModerationStatus,
          [
            itemId,
            status,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateEnhancedUser(_i12.EnhancedUser? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEnhancedUser,
          [user],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteUser(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [uid],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i10.NotificationModel>> getNotifications() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [],
        ),
        returnValue: _i5.Stream<List<_i10.NotificationModel>>.empty(),
      ) as _i5.Stream<List<_i10.NotificationModel>>);

  @override
  _i5.Future<void> sendQuoteSubmissionNotification(
          Map<String, dynamic>? quote) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendQuoteSubmissionNotification,
          [quote],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<DateTime, double>> getSalesOverTimeMap() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSalesOverTimeMap,
          [],
        ),
        returnValue:
            _i5.Future<Map<DateTime, double>>.value(<DateTime, double>{}),
      ) as _i5.Future<Map<DateTime, double>>);

  @override
  _i5.Future<_i7.OrderModel?> getOrderByID(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrderByID,
          [orderId],
        ),
        returnValue: _i5.Future<_i7.OrderModel?>.value(),
      ) as _i5.Future<_i7.OrderModel?>);

  @override
  _i5.Future<String?> uploadFile(
    _i34.Uint8List? bytes,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            bytes,
            path,
          ],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> addCommissionRecordValidated(
          _i15.CommissionModel? commission) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCommissionRecordValidated,
          [commission],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateCommissionRecord(
    String? commissionId,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCommissionRecord,
          [
            commissionId,
            updates,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i30.Inquiry>> streamAllInquiries() => (super.noSuchMethod(
        Invocation.method(
          #streamAllInquiries,
          [],
        ),
        returnValue: _i5.Stream<List<_i30.Inquiry>>.empty(),
      ) as _i5.Stream<List<_i30.Inquiry>>);

  @override
  _i5.Future<_i11.UserModel?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i5.Future<_i11.UserModel?>.value(),
      ) as _i5.Future<_i11.UserModel?>);

  @override
  _i5.Future<void> addInquiry(_i30.Inquiry? inquiry) => (super.noSuchMethod(
        Invocation.method(
          #addInquiry,
          [inquiry],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getUserReferrals(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserReferrals,
          [userId],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<_i11.UserModel>> getUsersByIds(List<String>? userIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUsersByIds,
          [userIds],
        ),
        returnValue: _i5.Future<List<_i11.UserModel>>.value(<_i11.UserModel>[]),
      ) as _i5.Future<List<_i11.UserModel>>);

  @override
  _i5.Future<String?> uploadIdentityDocumentBytes(
    _i34.Uint8List? bytes,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadIdentityDocumentBytes,
          [
            bytes,
            userId,
          ],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> updateUserData(
    String? uid,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserData,
          [
            uid,
            data,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveUserFCMToken(
    String? userId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserFCMToken,
          [
            userId,
            token,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i14.QuoteModel>> streamQuotes(String? rfqId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamQuotes,
          [rfqId],
        ),
        returnValue: _i5.Stream<List<_i14.QuoteModel>>.empty(),
      ) as _i5.Stream<List<_i14.QuoteModel>>);

  @override
  _i5.Future<void> rejectWithdrawal(
    String? withdrawalId,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectWithdrawal,
          [
            withdrawalId,
            reason,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i17.ProductModel>> getAllProducts() => (super.noSuchMethod(
        Invocation.method(
          #getAllProducts,
          [],
        ),
        returnValue:
            _i5.Future<List<_i17.ProductModel>>.value(<_i17.ProductModel>[]),
      ) as _i5.Future<List<_i17.ProductModel>>);
}

/// A class which mocks [PaymentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentService extends _i1.Mock implements _i3.PaymentService {
  MockPaymentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.PaymentResult> createPaymentWithProof({
    required String? orderId,
    required String? userId,
    required double? amount,
    required _i35.PaymentMethod? paymentMethod,
    required String? transactionId,
    String? notes,
    _i34.Uint8List? proofBytes,
    _i36.File? proofFile,
    String? proofFileName,
    int? maxRetries = 3,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPaymentWithProof,
          [],
          {
            #orderId: orderId,
            #userId: userId,
            #amount: amount,
            #paymentMethod: paymentMethod,
            #transactionId: transactionId,
            #notes: notes,
            #proofBytes: proofBytes,
            #proofFile: proofFile,
            #proofFileName: proofFileName,
            #maxRetries: maxRetries,
          },
        ),
        returnValue: _i5.Future<_i3.PaymentResult>.value(_FakePaymentResult_1(
          this,
          Invocation.method(
            #createPaymentWithProof,
            [],
            {
              #orderId: orderId,
              #userId: userId,
              #amount: amount,
              #paymentMethod: paymentMethod,
              #transactionId: transactionId,
              #notes: notes,
              #proofBytes: proofBytes,
              #proofFile: proofFile,
              #proofFileName: proofFileName,
              #maxRetries: maxRetries,
            },
          ),
        )),
      ) as _i5.Future<_i3.PaymentResult>);

  @override
  _i5.Stream<List<_i8.PaymentModel>> getPaymentsForOrder(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentsForOrder,
          [orderId],
        ),
        returnValue: _i5.Stream<List<_i8.PaymentModel>>.empty(),
      ) as _i5.Stream<List<_i8.PaymentModel>>);

  @override
  _i5.Stream<List<_i8.PaymentModel>> streamUserPayments(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamUserPayments,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i8.PaymentModel>>.empty(),
      ) as _i5.Stream<List<_i8.PaymentModel>>);

  @override
  _i5.Stream<List<_i8.PaymentModel>> streamAllPayments() => (super.noSuchMethod(
        Invocation.method(
          #streamAllPayments,
          [],
        ),
        returnValue: _i5.Stream<List<_i8.PaymentModel>>.empty(),
      ) as _i5.Stream<List<_i8.PaymentModel>>);

  @override
  _i5.Future<_i8.PaymentModel?> getPaymentById(String? paymentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentById,
          [paymentId],
        ),
        returnValue: _i5.Future<_i8.PaymentModel?>.value(),
      ) as _i5.Future<_i8.PaymentModel?>);

  @override
  _i5.Future<bool> updatePaymentStatus(
    String? paymentId,
    _i35.PaymentStatus? newStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePaymentStatus,
          [
            paymentId,
            newStatus,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> deletePayment(String? paymentId) => (super.noSuchMethod(
        Invocation.method(
          #deletePayment,
          [paymentId],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<Map<String, dynamic>> getPaymentAnalytics({
    DateTime? startDate,
    DateTime? endDate,
    String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentAnalytics,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
            #userId: userId,
          },
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<String> createPayment(_i8.PaymentModel? payment) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPayment,
          [payment],
        ),
        returnValue: _i5.Future<String>.value(_i37.dummyValue<String>(
          this,
          Invocation.method(
            #createPayment,
            [payment],
          ),
        )),
      ) as _i5.Future<String>);
}
