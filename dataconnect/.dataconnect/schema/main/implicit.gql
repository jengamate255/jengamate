extend type Comment {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Comment", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Comment`.`issue`. It must match the value of `Issue`.`id`. See `@ref` for how to customize it.
  """
  issueId: UUID @fdc_generated(from: "Comment.issue", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Comment`.`task`. It must match the value of `Task`.`id`. See `@ref` for how to customize it.
  """
  taskId: UUID @fdc_generated(from: "Comment.task", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Comment`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "Comment.user", purpose: IMPLICIT_REF_FIELD)
}
extend type Issue {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Issue", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Issue`.`assignedTo`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  assignedToId: UUID @fdc_generated(from: "Issue.assignedTo", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Issue`.`project`. It must match the value of `Project`.`id`. See `@ref` for how to customize it.
  """
  projectId: UUID! @fdc_generated(from: "Issue.project", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Issue`.`reportedBy`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  reportedById: UUID! @fdc_generated(from: "Issue.reportedBy", purpose: IMPLICIT_REF_FIELD)
}
extend type Organization {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Organization", purpose: IMPLICIT_KEY_FIELD)
}
extend type Project {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Project", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Project`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID! @fdc_generated(from: "Project.organization", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Project`.`projectLead`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  projectLeadId: UUID @fdc_generated(from: "Project.projectLead", purpose: IMPLICIT_REF_FIELD)
}
extend type Task {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Task", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Task`.`assignedTo`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  assignedToId: UUID @fdc_generated(from: "Task.assignedTo", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Task`.`project`. It must match the value of `Project`.`id`. See `@ref` for how to customize it.
  """
  projectId: UUID! @fdc_generated(from: "Task.project", purpose: IMPLICIT_REF_FIELD)
}
extend type User {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "User", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `User`.`organization`. It must match the value of `Organization`.`id`. See `@ref` for how to customize it.
  """
  organizationId: UUID! @fdc_generated(from: "User.organization", purpose: IMPLICIT_REF_FIELD)
}
